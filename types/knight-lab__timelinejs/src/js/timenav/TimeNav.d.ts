export class TimeNav {
    constructor(elem: any, timeline_config: any, options: any, language: any);
    language: any;
    _el: {
        parent: {};
        container: {};
        slider: {};
        slider_background: {};
        line: {};
        marker_container_mask: {};
        marker_container: {};
        marker_item_container: {};
        timeaxis: {};
        timeaxis_background: {};
        attribution: {};
    };
    collapsed: boolean;
    config: any;
    options: {
        width: number;
        height: number;
        duration: number;
        ease: typeof easeInOutQuint;
        has_groups: boolean;
        optimal_tick_width: number;
        scale_factor: number;
        marker_padding: number;
        timenav_height_min: number;
        marker_height_min: number;
        marker_width_min: number;
        zoom_sequence: number[];
    };
    animator: any;
    ready: boolean;
    _markers: any[];
    _eras: any[];
    has_eras: boolean;
    _groups: any[];
    _calculated_row_height: number;
    current_id: string;
    timescale: {};
    timeaxis: {};
    max_rows: number;
    animate_css: boolean;
    init(): void;
    positionMarkers(fast: any): void;
    updateDisplay(width: any, height: any, animate: any): void;
    _getTimeScale(): TimeScale;
    _updateTimeScale(new_scale: any): void;
    zoomIn(): void;
    zoomOut(): void;
    setZoom(level: any): void;
    setZoomFactor(factor: any): void;
    _createGroups(): void;
    _createGroup(group_label: any): void;
    _addGroup(group: any): void;
    _positionGroups(): void;
    _addMarker(marker: any): void;
    _createMarker(data: any, n: any): void;
    _createMarkers(array: any): void;
    _removeMarker(marker: any): void;
    _destroyMarker(n: any): void;
    _calculateMarkerHeight(h: any): number;
    _calculateRowHeight(h: any): number;
    _calculateAvailableHeight(): number;
    _calculateMinimumTimeNavHeight(): any;
    getMinimumHeight(): any;
    _assignRowsToMarkers(): void;
    _resetMarkersActive(): void;
    _findMarkerIndex(n: any): number;
    _createEras(array: any): void;
    _positionEras(fast: any): void;
    createMarker(d: any, n: any): void;
    createMarkers(array: any): void;
    destroyMarker(n: any): void;
    destroyMarkerId(id: any): void;
    goTo(n: any, fast: any, css_animation: any): void;
    goToId(id: any, fast: any, css_animation: any): void;
    _onLoaded(): void;
    _onMarkerAdded(e: any): void;
    _onEraAdded(e: any): void;
    _onMarkerRemoved(e: any): void;
    _onMarkerClick(e: any): void;
    _onMouseScroll(e: any): void;
    _onDragMove(e: any): void;
    _drawTimeline(fast: any): void;
    _updateDrawTimeline(check_update: any): boolean;
    _initLayout(): void;
    _swipable: Swipable;
    _initEvents(): void;
    _initData(): void;
}
import { easeInOutQuint } from "@knight-lab/timelinejs/src/js/animation/Ease";
import { TimeScale } from "@knight-lab/timelinejs/src/js/timenav/TimeScale";
import Swipable from "@knight-lab/timelinejs/src/js/ui/Swipable";
